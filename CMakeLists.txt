cmake_minimum_required(VERSION 3.13.0)
project(Chesscade)
IF(WIN32)
ELSE()
find_package(Curses REQUIRED)
ENDIF()
set(SOLIB ${PROJECT_BINARY_DIR}/ChesscadeLib.so)
set(WINLIB ${PROJECT_BINARY_DIR}/ChesscadeLib.dll)
set(CYGLIB ${PROJECT_BINARY_DIR}/cygChesscadeLib.dll)
include_directories(${CURSES_INCLUDE_DIR})
include_directories(private)
add_executable(ChesscadeApp)
target_sources(ChesscadeApp PRIVATE private/main.c private/model.c private/view.c private/control.c private/platform.c)
target_link_libraries(ChesscadeApp ${CURSES_LIBRARIES})
install(TARGETS ChesscadeApp DESTINATION bin)
add_library(ChesscadeLib SHARED)
target_include_directories(ChesscadeLib PUBLIC public)
target_sources(ChesscadeLib PUBLIC public/api.cpp PRIVATE private/model.c)
file(COPY assets DESTINATION ${PROJECT_SOURCE_DIR}/pygame_frontend)
message(${PROJECT_SOURCE_DIR})
IF(EXISTS ${SOLIB})
file(COPY ${SOLIB} DESTINATION ${PROJECT_SOURCE_DIR}/pygame_frontend/bin)
ENDIF()
IF(EXISTS ${WINLIB})
file(COPY ${WINLIB} DESTINATION ${PROJECT_SOURCE_DIR}/pygame_frontend/bin)
ENDIF()
IF(EXISTS ${CYGLIB})
file(COPY ${CYGLIB} DESTINATION ${PROJECT_SOURCE_DIR}/pygame_frontend/bin)
ENDIF()
