message("???")
cmake_minimum_required(VERSION 3.13.0)
project(Chesscade)
set(SOLIB ${PROJECT_BINARY_DIR}/libChesscadeLib.so)
set(WINLIB ${PROJECT_BINARY_DIR}/ChesscadeLib.dll)
include_directories(core)
add_library(ChesscadeLib SHARED)
target_include_directories(ChesscadeLib PUBLIC export)
target_sources(ChesscadeLib PUBLIC export/api.cpp PRIVATE core/model.c rules.h)
file(COPY assets DESTINATION ${PROJECT_SOURCE_DIR}/pygame_frontend)
message("Welp?")
IF(FALSE) # Command line app currently only works on Windows, and is turned off because the .exe gives Windows Defender a false positive. It's more of a debugging tool, than a game anyway.
	message("What!?")
	IF(WIN32) 
		IF(WIN32)
		ELSE()
			find_package(Curses REQUIRED)
			include_directories(${CURSES_INCLUDE_DIR})
		ENDIF()
		add_executable(ChesscadeApp)
		target_include_directories(ChesscadeApp PRIVATE standalone)
		target_sources(ChesscadeApp PRIVATE standalone/main.c core/model.c standalone/view.c standalone/control.c standalone/platform.c rules.h)
		target_link_libraries(ChesscadeApp ${CURSES_LIBRARIES})
		install(TARGETS ChesscadeApp DESTINATION bin)
	ENDIF()
ENDIF()
message("Whew!")
IF(EXISTS ${SOLIB})
	file(COPY ${SOLIB} DESTINATION ${PROJECT_SOURCE_DIR}/pygame_frontend/bin)
ENDIF()
IF(EXISTS ${WINLIB})
	file(COPY ${WINLIB} DESTINATION ${PROJECT_SOURCE_DIR}/pygame_frontend/bin)
ENDIF()
